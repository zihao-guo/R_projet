head(thyroid_impute)
thyroid_impute <- impute_lm(thyroid_impute, FTI_reading_fill ~ T4_reading_fill)
head(thyroid_impute)
thyroid_impute <- impute_lm(thyroid_impute, TSH_reading_fill ~ T3_reading_fill + T4_reading_fill)
head(thyroid_impute)
thyroid_impute <- impute_lm(thyroid_impute, T4U_rate_reading_fill ~ T3_reading_fill + T4_reading_fill + patient_age + pregnant)
head(thyroid_impute)
skim(thyroid_impute)
thyroid_impute %>%
filter(is.na(patient_age))
thyroid_impute <- impute_lm(thyroid_impute, patient_age ~ ThryroidClass + presc_thyroxine + presc_anthyroid_meds + sick + thyroid_surgery + radioactive_iodine_therapyI131 + lithium + goitre + tumor + hypopituitarism + psych_condition + TSH_reading + T3_reading + T4_reading + thyrox_util_rate_T4U_reading + FTI_reading)
head(thyroid_impute)
thyroid_impute[2] <- round(thyroid_impute[2], 0)
head(thyroid_impute)
skim(thyroid_impute)
# Groupe d'âge
thyroid_impute <- mutate(thyroid_impute, patient_age_Seg = patient_age)
thyroid_impute$patient_age_Seg <- as.numeric(factor(thyroid_impute$patient_age_Seg))
thyroid_impute$patient_age_Seg<-cut(thyroid_impute$patient_age_Seg,breaks = c(-Inf, 10, 20, 30, 40 ,50 ,60, 70, 80, 90, Inf),labels = c('1-10','11-20','21-30','31-40','41-50','51-60','61-70','71-80','81-90','91-100'))
thyroid_impute
# Transformation des données en données numériques
thyroid_cor <- thyroid_impute
thyroid_cor$ThryroidClass <- as.numeric(factor(thyroid_cor$ThryroidClass))
thyroid_cor$ref_src <- as.numeric(factor(thyroid_cor$ref_src))
model <- lm(sick~., data = data1)
summary(model)
# confint(model)
library(broom)
model%>% tidy %>% write.csv(file = "mtcars.lm.tidy.csv")
model%>% glance %>% write.csv(file = "mtcars.lm.glance.csv")
#热力图
cormtcars <- round(cor(thyroid_cor), 3) #round()函数自定义小数点后位数
skim(thyroid_impute)
skim(thyroid_cor)
colnames(thyroid_cor)
colnames(thyroid_impute)
Col_na  = c("T3_reading", "T4_reading", "TSH_reading", "FTI_reading", "T4U_rate_reading")
thyroid_tidy = thyroid_tidy[,!names(dataset) %in% Col_na]
colnames(thyroid_impute)
Col_na  = c("T3_reading", "T4_reading", "TSH_reading", "FTI_reading", "T4U_rate_reading")
thyroid_tidy = thyroid_impute[,!names(dataset) %in% Col_na]
colnames(thyroid_impute)
Col_na  = c("T3_reading", "T4_reading", "TSH_reading", "FTI_reading", "T4U_rate_reading")
thyroid_tidy = thyroid_impute[,!names(thyroid_impute) %in% Col_na]
thyroid_tidy
colnames(thyroid_impute)
Col_na  = c("T3_reading", "T4_reading", "TSH_reading", "FTI_reading", "T4U_rate_reading")
thyroid_tidy = thyroid_impute[,!names(thyroid_impute) %in% Col_na]
skim(thyroid_tidy)
# Transformation des données en données numériques
thyroid_cor <- thyroid_tidy
thyroid_cor$ThryroidClass <- as.numeric(factor(thyroid_cor$ThryroidClass))
thyroid_cor$ref_src <- as.numeric(factor(thyroid_cor$ref_src))
thyroid_cor$patient_age_Seg <- as.numeric(factor(thyroid_cor$patient_age_Seg))
# Transformation des données en données numériques
thyroid_cor <- thyroid_tidy
thyroid_cor$ThryroidClass <- as.numeric(factor(thyroid_cor$ThryroidClass))
thyroid_cor$ref_src <- as.numeric(factor(thyroid_cor$ref_src))
thyroid_cor$patient_age_Seg <- as.numeric(factor(thyroid_cor$patient_age_Seg))
model <- lm(sick~., data = data1)
summary(model)
# Transformation des données en données numériques
thyroid_cor <- thyroid_tidy
thyroid_cor$ThryroidClass <- as.numeric(factor(thyroid_cor$ThryroidClass))
thyroid_cor$ref_src <- as.numeric(factor(thyroid_cor$ref_src))
thyroid_cor$patient_age_Seg <- as.numeric(factor(thyroid_cor$patient_age_Seg))
model <- lm(sick~., data = thyroid_cor)
summary(model)
thyroid_cor
skim(thyroid_cor)
colnames(thyroid_impute)
Col_na  = c("T3_reading", "T4_reading", "TSH_reading", "FTI_reading", "T4U_rate_reading", 'thyrox_util_rate_T4U_reading')
thyroid_tidy = thyroid_impute[,!names(thyroid_impute) %in% Col_na]
skim(thyroid_tidy)
# Supprimer la colonne vide d'origine et remplissez-la avec les données interpolées.
Col_na  = c("T3_reading", "T4_reading", "TSH_reading", "FTI_reading", "T4U_rate_reading", 'thyrox_util_rate_T4U_reading')
thyroid_tidy = thyroid_impute[,!names(thyroid_impute) %in% Col_na]
skim(thyroid_tidy)
# Transformation des données en données numériques
thyroid_cor <- thyroid_tidy
thyroid_cor$ThryroidClass <- as.numeric(factor(thyroid_cor$ThryroidClass))
thyroid_cor$ref_src <- as.numeric(factor(thyroid_cor$ref_src))
thyroid_cor$patient_age_Seg <- as.numeric(factor(thyroid_cor$patient_age_Seg))
model <- lm(sick~., data = thyroid_cor)
summary(model)
confint(model)
# Carte de chaleur
cormtcars <- round(cor(thyroid_cor), 3) # round()Fonction permettant de personnaliser le nombre de décimales
data <- as.data.frame(cormtcars) %>% # Convertir des matrices en cadres de données
mutate(x=rownames(cormtcars)) %>%  # Créer une nouvelle colonne x, qui est constituée de 11 variables d'attribut.
melt(id='x') %>%                   # Convertir les données larges en données longues, mieux adaptées aux graphiques ggplot2
rename('y'='variable','Corr'='value')  # Changer le nom de la colonne variable en y
library(tidyverse)
library(skimr)
library(janitor)
library(naniar)
library(simputation)
library(gridExtra)
library(ggplot2)
library(mice)
library(stats)
library(readr)
# Carte de chaleur
cormtcars <- round(cor(thyroid_cor), 3) # round()Fonction permettant de personnaliser le nombre de décimales
data <- as.data.frame(cormtcars) %>% # Convertir des matrices en cadres de données
mutate(x=rownames(cormtcars)) %>%  # Créer une nouvelle colonne x, qui est constituée de 11 variables d'attribut.
melt(id='x') %>%                   # Convertir les données larges en données longues, mieux adaptées aux graphiques ggplot2
rename('y'='variable','Corr'='value')  # Changer le nom de la colonne variable en y
library(tidyverse)
library(skimr)
library(janitor)
library(naniar)
library(simputation)
library(gridExtra)
library(ggplot2)
library(reshape2)
library(stats)
library(readr)
# Carte de chaleur
cormtcars <- round(cor(thyroid_cor), 3) # round()Fonction permettant de personnaliser le nombre de décimales
data <- as.data.frame(cormtcars) %>% # Convertir des matrices en cadres de données
mutate(x=rownames(cormtcars)) %>%  # Créer une nouvelle colonne x, qui est constituée de 11 variables d'attribut.
melt(id='x') %>%                   # Convertir les données larges en données longues, mieux adaptées aux graphiques ggplot2
rename('y'='variable','Corr'='value')  # Changer le nom de la colonne variable en y
# Déterminer d'abord l'ordre des facteurs des axes x et y lors du tracé.
list <- rownames(cormtcars)
list <- factor(list,levels = list)
ggplot(data,aes(factor(x,levels = list),
factor(y,levels = list), # Définir l'ordre des axes x, y pour éviter qu'il ne soit modifié par défaut
fill=Corr))+
# Remplissage des couleurs en fonction des valeurs de pertinence
geom_tile()+  # Fonctions des blocs de couleur
scale_fill_gradient2(low = 'Blue',mid = 'white',high ='red',
limits=c(-1,1),breaks=c(-1,-0.5,0,0.5,1))+
labs(x=NULL,y=NULL)+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
model%>%
tidy
model%>% glance
# Transformation des données en données numériques
thyroid_cor <- thyroid_tidy
thyroid_cor$ThryroidClass <- as.numeric(factor(thyroid_cor$ThryroidClass))
thyroid_cor$ref_src <- as.numeric(factor(thyroid_cor$ref_src))
thyroid_cor$patient_age_Seg <- as.numeric(factor(thyroid_cor$patient_age_Seg))
model <- lm(sick~., data = thyroid_cor)
summary(model)
model%>% glance
confint(model)
library(tidyverse)
library(skimr)
library(janitor)
library(naniar)
library(simputation)
library(gridExtra)
library(ggplot2)
library(reshape2)
library(broom)
library(stats)
library(readr)
model%>%
tidy
c <- model%>%
tidy
c[order(c[,1]),] #按第一列递增排序
c <- model%>%
tidy
data[order(data$estimate),]
c <- model%>%
tidy
c[order(c$estimate),]
c <- model%>%
tidy
c[order(c$estimate),decreasing = TRUE]
c <- model%>%
tidy
c[order(c$estimate, decreasing = TRUE)]
c <- model%>%
tidy
sort(c$estimate, decreasing = TRUE)]
c <- model%>%
tidy
sort(c$estimate, decreasing = TRUE)
c <- model%>%
tidy
c[sort(c$estimate, decreasing = TRUE)]
c <- model%>%
tidy
c[order(c$estimate)]
c <- model%>%
tidy
c[order(c$estimate,)]
c <- model%>%
tidy
c[order(c$estimate),]
model%>% tidy[order(model%>% tidy$estimate),]
model_tidy <- model%>% tidy
model_tidy[order(-model_tidy$estimate),]
model_tidy <- model%>% tidy
model_tidy[order(-model_tidy$estimate)]
model_tidy <- model%>% tidy
model_tidy[order(-model_tidy$estimate)]
model_tidy <- model%>% tidy
model_tidy[order(model_tidy$estimate)]
model_tidy <- model%>% tidy
model_tidy[order(-model_tidy$estimate),]
library(tidyverse)
library(skimr)
library(janitor)
library(naniar)
library(simputation)
library(gridExtra)
library(ggplot2)
library(reshape2)
library(broom)
library(stats)
library(readr)
data1 <- read.csv("../thyroid.csv",encoding = 'UTF-8')
# thyroid <- read_csv("C:/Users/roman/Downloads/thyroid.csv")
problems(data1)
# Résoudre le problème de jeu des données
data1$patient_age[which(data1$patient_age =='28;0')] <- 28
data1$FTI_measured[which(data1$FTI_measured ==119)] <- 1
# Afficher les données
DT::datatable(data1)
# Affichage des catégories de données et des valeurs manquantes
skim(data1)
thyroid_raw <- data1
glimpse(thyroid_raw)
thyroid_td <- thyroid_raw %>%
remove_empty(c("rows", "cols")) %>%
remove_constant(na.rm = FALSE, quiet = FALSE)
thyroid_td
x <- as.data.frame(abs(is.na(data1)))
y <- x[which(apply(x, MARGIN=2, sd)>0)] # > 0: avec valeurs manquantes
data_m_cor <- as.data.frame.array(cor(y))
data_m_cor
skim(thyroid_td) %>%
filter(n_missing > 0)
thyroid_td$FTI_reading <- as.numeric(factor(thyroid_td$FTI_reading))
gg_miss_var(thyroid_td)
plot.T3 <- thyroid_td %>%
ggplot(mapping = aes(x = patient_age, y = T3_reading)) +
geom_miss_point() +
labs(title="T3_reading")
plot.T4U <- thyroid_td %>%
ggplot(mapping = aes(x = patient_age, y = thyrox_util_rate_T4U_reading)) +
geom_miss_point() +
labs(title="thyrox_util_rate_T4U_reading")
plot.FTI <- thyroid_td %>%
ggplot(mapping = aes(x = patient_age, y = FTI_reading)) +
geom_miss_point() +
labs(title="FTI_reading")
plot.TSH <- thyroid_td %>%
ggplot(mapping = aes(x = patient_age, y = TSH_reading)) +
geom_miss_point() +
labs(title="TSH_reading")
grid.arrange(plot.T3, plot.T4U, plot.FTI, plot.TSH, nrow=4)
thyroid_td %>%
filter(is.na(T3_reading) & (T3_measured != 0))
thyroid_td %>%
filter(T3_measured != 1 & T3_measured != 0)
ind <- which(!(thyroid_td$T3_measured %in% c(0, 1)))
ind
thyroid_td[15,]
thyroid_td$T3_measured[15]
#Code très laid
thyroid_td[15, 21] <- thyroid_td$T3_measured[15]
thyroid_td[15, 20] <- 1
thyroid_td[15, 19] <- thyroid_td$TSH_measured[15]
thyroid_td[15, 18] <- 1
thyroid_td[15, 23] <- thyroid_td$T4_measured[15]
thyroid_td[15, 22] <- 1
thyroid_td[15, 25] <- thyroid_td$thyrox_util_rate_T4U_measured[15]
thyroid_td[15, 24] <- 1
thyroid_td[15, 27] <- thyroid_td$FTI_measured[15]
thyroid_td[15, 26] <- 1
thyroid_td
thyroid_td %>%
filter(is.na(thyrox_util_rate_T4U_reading) & (thyrox_util_rate_T4U_measured != 0))
thyroid_td %>%
filter(!(thyrox_util_rate_T4U_measured %in% c(0, 1)))
thyroid_td %>%
filter(is.na(FTI_reading) & FTI_measured != 0)
thyroid_td %>%
filter(!(FTI_measured %in% c(0,1)))
thyroid_td %>%
filter(is.na(TSH_reading) & TSH_measured != 0)
thyroid_td %>%
filter(!(TSH_measured %in% c(0,1)))
thyroid_td %>%
filter(is.na(T4_reading) & T4_measured != 0)
thyroid_td %>%
filter(!(T4_measured %in% c(0,1)))
thyroid_td <- mutate(thyroid_td, T3_reading_fill = T3_reading)
thyroid_td <- mutate(thyroid_td, T4_reading_fill = T4_reading)
thyroid_td <- mutate(thyroid_td, TSH_reading_fill = TSH_reading)
thyroid_td <- mutate(thyroid_td, FTI_reading_fill = FTI_reading)
thyroid_td <- mutate(thyroid_td, T4U_rate_reading_fill = thyrox_util_rate_T4U_reading)
head(thyroid_td)
thyroid_td$patient_age <- as.numeric(factor(thyroid_td$patient_age))
thyroid_impute <- thyroid_td
thyroid_impute <- impute_lm(thyroid_impute, T4_reading_fill + T3_reading_fill ~ ThryroidClass + patient_age + patient_gender + presc_thyroxine + queried_why_on_thyroxine + presc_anthyroid_meds + sick + pregnant + thyroid_surgery + radioactive_iodine_therapyI131 + query_hypothyroid + query_hyperthyroid + lithium + goitre + tumor + hypopituitarism + psych_condition)
head(thyroid_impute)
thyroid_impute <- impute_lm(thyroid_impute, FTI_reading_fill ~ T4_reading_fill)
head(thyroid_impute)
thyroid_impute <- impute_lm(thyroid_impute, TSH_reading_fill ~ T3_reading_fill + T4_reading_fill)
head(thyroid_impute)
thyroid_impute <- impute_lm(thyroid_impute, T4U_rate_reading_fill ~ T3_reading_fill + T4_reading_fill + patient_age + pregnant)
head(thyroid_impute)
skim(thyroid_impute)
thyroid_impute %>%
filter(is.na(patient_age))
thyroid_impute <- impute_lm(thyroid_impute, patient_age ~ ThryroidClass + presc_thyroxine + presc_anthyroid_meds + sick + thyroid_surgery + radioactive_iodine_therapyI131 + lithium + goitre + tumor + hypopituitarism + psych_condition + TSH_reading + T3_reading + T4_reading + thyrox_util_rate_T4U_reading + FTI_reading)
head(thyroid_impute)
thyroid_impute[2] <- round(thyroid_impute[2], 0)
head(thyroid_impute)
skim(thyroid_impute)
# Groupe d'âge
thyroid_impute <- mutate(thyroid_impute, patient_age_Seg = patient_age)
thyroid_impute$patient_age_Seg <- as.numeric(factor(thyroid_impute$patient_age_Seg))
thyroid_impute$patient_age_Seg<-cut(thyroid_impute$patient_age_Seg,breaks = c(-Inf, 10, 20, 30, 40 ,50 ,60, 70, 80, 90, Inf),labels = c('1-10','11-20','21-30','31-40','41-50','51-60','61-70','71-80','81-90','91-100'))
thyroid_impute
# Supprimer la colonne vide d'origine et remplissez-la avec les données interpolées.
Col_na  = c("T3_reading", "T4_reading", "TSH_reading", "FTI_reading", "T4U_rate_reading", 'thyrox_util_rate_T4U_reading')
thyroid_tidy = thyroid_impute[,!names(thyroid_impute) %in% Col_na]
skim(thyroid_tidy)
# Sauvegarder les données nettoyées
thyroid_tidy %>% write.csv(file = "thyroid_tidy.csv")
# Transformation des données en données numériques
thyroid_cor <- thyroid_tidy
thyroid_cor$ThryroidClass <- as.numeric(factor(thyroid_cor$ThryroidClass))
thyroid_cor$ref_src <- as.numeric(factor(thyroid_cor$ref_src))
thyroid_cor$patient_age_Seg <- as.numeric(factor(thyroid_cor$patient_age_Seg))
model <- lm(sick~., data = thyroid_cor)
summary(model)
model%>% glance
# confint(model)
model_tidy <- model%>% tidy
model_tidy[order(-model_tidy$estimate),]
# Carte de chaleur
cormtcars <- round(cor(thyroid_cor), 3) # round()Fonction permettant de personnaliser le nombre de décimales
data <- as.data.frame(cormtcars) %>% # Convertir des matrices en cadres de données
mutate(x=rownames(cormtcars)) %>%  # Créer une nouvelle colonne x, qui est constituée de 11 variables d'attribut.
melt(id='x') %>%                   # Convertir les données larges en données longues, mieux adaptées aux graphiques ggplot2
rename('y'='variable','Corr'='value')  # Changer le nom de la colonne variable en y
# Déterminer d'abord l'ordre des facteurs des axes x et y lors du tracé.
list <- rownames(cormtcars)
list <- factor(list,levels = list)
ggplot(data,aes(factor(x,levels = list),
factor(y,levels = list), # Définir l'ordre des axes x, y pour éviter qu'il ne soit modifié par défaut
fill=Corr))+
# Remplissage des couleurs en fonction des valeurs de pertinence
geom_tile()+  # Fonctions des blocs de couleur
scale_fill_gradient2(low = 'Blue',mid = 'white',high ='red',
limits=c(-1,1),breaks=c(-1,-0.5,0,0.5,1))+
labs(x=NULL,y=NULL)+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(skimr)
library(janitor)
library(naniar)
library(simputation)
library(gridExtra)
library(ggplot2)
library(reshape2)
library(broom)
library(stats)
library(readr)
data1 <- read.csv("../A_Datas/thyroid.csv",encoding = 'UTF-8')
# thyroid <- read_csv("C:/Users/roman/Downloads/thyroid.csv")
problems(data1)
# Résoudre le problème de jeu des données
data1$patient_age[which(data1$patient_age =='28;0')] <- 28
data1$FTI_measured[which(data1$FTI_measured ==119)] <- 1
# Afficher les données
DT::datatable(data1)
# Affichage des catégories de données et des valeurs manquantes
skim(data1)
thyroid_raw <- data1
glimpse(thyroid_raw)
thyroid_td <- thyroid_raw %>%
remove_empty(c("rows", "cols")) %>%
remove_constant(na.rm = FALSE, quiet = FALSE)
thyroid_td
x <- as.data.frame(abs(is.na(data1)))
y <- x[which(apply(x, MARGIN=2, sd)>0)] # > 0: avec valeurs manquantes
data_m_cor <- as.data.frame.array(cor(y))
data_m_cor
skim(thyroid_td) %>%
filter(n_missing > 0)
thyroid_td$FTI_reading <- as.numeric(factor(thyroid_td$FTI_reading))
gg_miss_var(thyroid_td)
plot.T3 <- thyroid_td %>%
ggplot(mapping = aes(x = patient_age, y = T3_reading)) +
geom_miss_point() +
labs(title="T3_reading")
plot.T4U <- thyroid_td %>%
ggplot(mapping = aes(x = patient_age, y = thyrox_util_rate_T4U_reading)) +
geom_miss_point() +
labs(title="thyrox_util_rate_T4U_reading")
plot.FTI <- thyroid_td %>%
ggplot(mapping = aes(x = patient_age, y = FTI_reading)) +
geom_miss_point() +
labs(title="FTI_reading")
plot.TSH <- thyroid_td %>%
ggplot(mapping = aes(x = patient_age, y = TSH_reading)) +
geom_miss_point() +
labs(title="TSH_reading")
grid.arrange(plot.T3, plot.T4U, plot.FTI, plot.TSH, nrow=4)
thyroid_td %>%
filter(is.na(T3_reading) & (T3_measured != 0))
thyroid_td %>%
filter(T3_measured != 1 & T3_measured != 0)
ind <- which(!(thyroid_td$T3_measured %in% c(0, 1)))
ind
thyroid_td[15,]
thyroid_td$T3_measured[15]
#Code très laid
thyroid_td[15, 21] <- thyroid_td$T3_measured[15]
thyroid_td[15, 20] <- 1
thyroid_td[15, 19] <- thyroid_td$TSH_measured[15]
thyroid_td[15, 18] <- 1
thyroid_td[15, 23] <- thyroid_td$T4_measured[15]
thyroid_td[15, 22] <- 1
thyroid_td[15, 25] <- thyroid_td$thyrox_util_rate_T4U_measured[15]
thyroid_td[15, 24] <- 1
thyroid_td[15, 27] <- thyroid_td$FTI_measured[15]
thyroid_td[15, 26] <- 1
thyroid_td
thyroid_td %>%
filter(is.na(thyrox_util_rate_T4U_reading) & (thyrox_util_rate_T4U_measured != 0))
thyroid_td %>%
filter(!(thyrox_util_rate_T4U_measured %in% c(0, 1)))
thyroid_td %>%
filter(is.na(FTI_reading) & FTI_measured != 0)
thyroid_td %>%
filter(!(FTI_measured %in% c(0,1)))
thyroid_td %>%
filter(is.na(TSH_reading) & TSH_measured != 0)
thyroid_td %>%
filter(!(TSH_measured %in% c(0,1)))
thyroid_td %>%
filter(is.na(T4_reading) & T4_measured != 0)
thyroid_td %>%
filter(!(T4_measured %in% c(0,1)))
thyroid_td <- mutate(thyroid_td, T3_reading_fill = T3_reading)
thyroid_td <- mutate(thyroid_td, T4_reading_fill = T4_reading)
thyroid_td <- mutate(thyroid_td, TSH_reading_fill = TSH_reading)
thyroid_td <- mutate(thyroid_td, FTI_reading_fill = FTI_reading)
thyroid_td <- mutate(thyroid_td, T4U_rate_reading_fill = thyrox_util_rate_T4U_reading)
head(thyroid_td)
thyroid_td$patient_age <- as.numeric(factor(thyroid_td$patient_age))
thyroid_impute <- thyroid_td
thyroid_impute <- impute_lm(thyroid_impute, T4_reading_fill + T3_reading_fill ~ ThryroidClass + patient_age + patient_gender + presc_thyroxine + queried_why_on_thyroxine + presc_anthyroid_meds + sick + pregnant + thyroid_surgery + radioactive_iodine_therapyI131 + query_hypothyroid + query_hyperthyroid + lithium + goitre + tumor + hypopituitarism + psych_condition)
head(thyroid_impute)
thyroid_impute <- impute_lm(thyroid_impute, FTI_reading_fill ~ T4_reading_fill)
head(thyroid_impute)
thyroid_impute <- impute_lm(thyroid_impute, TSH_reading_fill ~ T3_reading_fill + T4_reading_fill)
head(thyroid_impute)
thyroid_impute <- impute_lm(thyroid_impute, T4U_rate_reading_fill ~ T3_reading_fill + T4_reading_fill + patient_age + pregnant)
head(thyroid_impute)
skim(thyroid_impute)
thyroid_impute %>%
filter(is.na(patient_age))
thyroid_impute <- impute_lm(thyroid_impute, patient_age ~ ThryroidClass + presc_thyroxine + presc_anthyroid_meds + sick + thyroid_surgery + radioactive_iodine_therapyI131 + lithium + goitre + tumor + hypopituitarism + psych_condition + TSH_reading + T3_reading + T4_reading + thyrox_util_rate_T4U_reading + FTI_reading)
head(thyroid_impute)
thyroid_impute[2] <- round(thyroid_impute[2], 0)
head(thyroid_impute)
skim(thyroid_impute)
# Groupe d'âge
thyroid_impute <- mutate(thyroid_impute, patient_age_Seg = patient_age)
thyroid_impute$patient_age_Seg <- as.numeric(factor(thyroid_impute$patient_age_Seg))
thyroid_impute$patient_age_Seg<-cut(thyroid_impute$patient_age_Seg,breaks = c(-Inf, 10, 20, 30, 40 ,50 ,60, 70, 80, 90, Inf),labels = c('1-10','11-20','21-30','31-40','41-50','51-60','61-70','71-80','81-90','91-100'))
thyroid_impute
# Supprimer la colonne vide d'origine et remplissez-la avec les données interpolées.
Col_na  = c("T3_reading", "T4_reading", "TSH_reading", "FTI_reading", "T4U_rate_reading", 'thyrox_util_rate_T4U_reading')
thyroid_tidy = thyroid_impute[,!names(thyroid_impute) %in% Col_na]
skim(thyroid_tidy)
# Sauvegarder les données nettoyées
thyroid_tidy %>% write.csv(file = "../A_Datas/thyroid_tidy.csv")
# Transformation des données en données numériques
thyroid_cor <- thyroid_tidy
thyroid_cor$ThryroidClass <- as.numeric(factor(thyroid_cor$ThryroidClass))
thyroid_cor$ref_src <- as.numeric(factor(thyroid_cor$ref_src))
thyroid_cor$patient_age_Seg <- as.numeric(factor(thyroid_cor$patient_age_Seg))
model <- lm(sick~., data = thyroid_cor)
summary(model)
model%>% glance
# confint(model)
model_tidy <- model%>% tidy
model_tidy[order(-model_tidy$estimate),]
# Carte de chaleur
cormtcars <- round(cor(thyroid_cor), 3) # round()Fonction permettant de personnaliser le nombre de décimales
data <- as.data.frame(cormtcars) %>% # Convertir des matrices en cadres de données
mutate(x=rownames(cormtcars)) %>%  # Créer une nouvelle colonne x, qui est constituée de 11 variables d'attribut.
melt(id='x') %>%                   # Convertir les données larges en données longues, mieux adaptées aux graphiques ggplot2
rename('y'='variable','Corr'='value')  # Changer le nom de la colonne variable en y
# Déterminer d'abord l'ordre des facteurs des axes x et y lors du tracé.
list <- rownames(cormtcars)
list <- factor(list,levels = list)
ggplot(data,aes(factor(x,levels = list),
factor(y,levels = list), # Définir l'ordre des axes x, y pour éviter qu'il ne soit modifié par défaut
fill=Corr))+
# Remplissage des couleurs en fonction des valeurs de pertinence
geom_tile()+  # Fonctions des blocs de couleur
scale_fill_gradient2(low = 'Blue',mid = 'white',high ='red',
limits=c(-1,1),breaks=c(-1,-0.5,0,0.5,1))+
labs(x=NULL,y=NULL)+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
