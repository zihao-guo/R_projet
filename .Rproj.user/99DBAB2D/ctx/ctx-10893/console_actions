{
    "type": [
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2
    ],
    "data": [
        "\nR version 4.2.2 (2022-10-31 ucrt) -- \"Innocent and Trusting\"\nCopyright (C) 2022 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "Error in if (file.exists(pythonPath)) return(pythonPath) : \n  argument is of length zero\n",
        "[Workspace loaded from E:/Code/R_projet/.RData]\r\n\r\n\nRestarting R session...\n\n",
        "Error in if (file.exists(pythonPath)) return(pythonPath) : \n  argument is of length zero\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(flexdashboard)",
        "> ",
        "library(shiny)",
        "> ",
        "library(readr)",
        "> ",
        "",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "data1 <- read.csv(\"../A_Datas/thyroid_tidy.csv\",encoding = 'UTF-8')",
        "> ",
        "data2 <- read.csv(\"../A_Datas/df_tidy_for_db3.csv\")",
        "> ",
        "data3 <- read.csv(\"../A_Datas/df_tidy_for_db3.csv\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "type <- c(\"patient_gender\", \"presc_thyroxine\", \"queried_why_on_thyroxine\", ",
        "+ ",
        "          #\"presc_anthyroid_meds\", ",
        "+ ",
        "          \"sick\", ",
        "+ ",
        "          #\"pregnant\", \"thyroid_surgery\", ",
        "+ ",
        "          \"radioactive_iodine_therapyI131\", \"query_hypothyroid\", \"query_hyperthyroid\", \"lithium\", \"goitre\", \"tumor\", \"hypopituitarism\", \"psych_condition\", \"TSH_measured\", \"T3_measured\", ",
        "+ ",
        "          # \"T4_measured\", ",
        "+ ",
        "          \"thyrox_util_rate_T4U_measured\", \"FTI_measured\")",
        "> ",
        "",
        "> ",
        "selectInput('xcol', 'X Variable', ",
        "+ ",
        "            list(",
        "+ ",
        "              \"The reading result of the Free triiodothyronine\" = \"T3_reading_fill\",       ",
        "+ ",
        "              \"The reading result of the Free thyroxine\" = \"T4_reading_fill\",     ",
        "+ ",
        "              \"The reading result of the TSH blood test\" = \"TSH_reading_fill\",     ",
        "+ ",
        "              \"The result of the Free Thyroxine Index\" = \"FTI_reading_fill\",    ",
        "+ ",
        "              \"The result of the thyroxine utilisation rate\" = \"T4U_rate_reading_fill\"))",
        "> ",
        "",
        "> ",
        "selectInput('ycol', 'Y Variable',             ",
        "+ ",
        "            list(",
        "+ ",
        "              \"The result of the Free Thyroxine Index\" = \"FTI_reading_fill\", ",
        "+ ",
        "              \"The reading result of the Free thyroxine\" = \"T4_reading_fill\",  ",
        "+ ",
        "              \"The reading result of the Free triiodothyronine\" = \"T3_reading_fill\",       ",
        "+ ",
        "              \"The reading result of the TSH blood test\" = \"TSH_reading_fill\",     ",
        "+ ",
        "              \"The result of the thyroxine utilisation rate\" = \"T4U_rate_reading_fill\"))",
        "> ",
        "",
        "> ",
        "selectInput('var', 'Influencing Factors',",
        "+ ",
        "            list(\"whether thyroxine replacement prescribed\" = \"presc_thyroxine\",",
        "+ ",
        "                 \"Patient Gender\" = \"patient_gender\",",
        "+ ",
        "                 \"query has been actioned\" = \"queried_why_on_thyroxine\", ",
        "+ ",
        "                 \"sickness due to thyroxine depletion or over activity\" = \"sick\",",
        "+ ",
        "                 \"whether anti-thyroid medicine has been prescribed\" = \"presc_anthyroid_meds\",",
        "+ ",
        "                 \"whether the patient has had thyroid surgery\" = \"thyroid_surgery\",",
        "+ ",
        "                 \"Pregnant or not\"  = \"pregnant\",",
        "+ ",
        "                 \"whether patient has had radioactive iodine treatment\" = \"radioactive_iodine_therapyI131\", ",
        "+ ",
        "                 \"under active thyroid query\" = \"query_hypothyroid\", ",
        "+ ",
        "                 \"over active thyroid query\" = \"query_hyperthyroid\", ",
        "+ ",
        "                 \"Lithium carbonate administered to decrease the level of thyroid hormones\" = \"lithium\", ",
        "+ ",
        "                 \"swelling of the thyroid gland\" = \"goitre\", ",
        "+ ",
        "                 \"Have a tumor\" = \"tumor\", ",
        "+ ",
        "                 \"a diagnosed under active thyroid\" = \"hypopituitarism\", ",
        "+ ",
        "                 \"whether a patient has a psychological condition\" = \"psych_condition\", ",
        "+ ",
        "                 \"A TSH level lower than normal\" = \"TSH_measured\", ",
        "+ ",
        "                 \"Is the thyroid gland hyperactive\" = \"T4_measured\",",
        "+ ",
        "                 \"free triiodothyronine rise above normal\" = \"T3_measured\", ",
        "+ ",
        "                 \"the thyroxine utilisation rate\" = \"thyrox_util_rate_T4U_measured\", ",
        "+ ",
        "                 \"measurement on the Free Thyroxine Index\" = \"FTI_measured\"))",
        "> ",
        "# c(colnames(data1)[2:24],colnames(data1)[30]),",
        "> ",
        "                # selected=colnames(data1)[[5]])",
        "> ",
        "",
        "> ",
        "selectInput(\"variable\",  # 传入变量名称",
        "+ ",
        "            \"Positive or not (Gender: F/ M)\", # 提示文字",
        "+ ",
        "            list(\"Positive\" = \"1\",",
        "+ ",
        "                 \"Negative\" = \"0\"))",
        "> ",
        "    ",
        "> ",
        "# varSelectInput(\"variable\", \"Variable:\", data)",
        "> ",
        "renderPlot({",
        "+ ",
        "df_2 <- data3 %>% ",
        "+ ",
        "  filter((indicateur == input$var) | (indicateur == input$var))",
        "+ ",
        "",
        "+ ",
        "df_2$positive[df_2$positive == 0 ]<-\"NO\"",
        "+ ",
        "df_2$positive[df_2$positive == 1 ]<-\"YES\"",
        "+ ",
        "",
        "+ ",
        "df_2 %>% ",
        "+ ",
        "  ggplot(aes(x = ThyroidClass, y = count)) +",
        "+ ",
        "  geom_col(aes(colour=indicateur, fill=indicateur), position = \"dodge\")+",
        "+ ",
        "  facet_grid(positive ~ ThyroidClass)",
        "+ ",
        "})",
        "<shiny.render.function> \n",
        "> ",
        "",
        "> ",
        "renderPlot({",
        "+ ",
        "df_2 <- data1 %>% ",
        "+ ",
        "  rename(Positive = input$var) %>% ",
        "+ ",
        "  rename(xval = input$xcol) %>% ",
        "+ ",
        "  rename(yval = input$ycol) %>% ",
        "+ ",
        "  ",
        "+ ",
        "  mutate(xval = log(xval)) %>% ",
        "+ ",
        "  mutate(yval = log(yval))",
        "+ ",
        "",
        "+ ",
        "df_2$Positive[df_2$Positive== 1 ]<-\"YES\"",
        "+ ",
        "df_2$Positive[df_2$Positive== 0 ]<-\"NO\"",
        "+ ",
        "",
        "+ ",
        "df_2 %>% ",
        "+ ",
        "  ggplot(aes(x = xval, y = yval)) +",
        "+ ",
        "  geom_point(aes(colour=Positive))+",
        "+ ",
        "  facet_grid(Positive ~ ThyroidClass) + labs(",
        "+ ",
        "    x = \"X Variable\",",
        "+ ",
        "    y = \"Y Variable\",",
        "+ ",
        "    # title = \"Numerical variable comparison\",",
        "+ ",
        "    subtitle = \" \",",
        "+ ",
        "    caption = \"Data source: Aymeric Stamm\"  )",
        "+ ",
        "})",
        "<shiny.render.function> \n",
        "> ",
        "",
        "> ",
        "renderPlot({",
        "+ ",
        "  df_2 <- data1 %>% ",
        "+ ",
        "  rename(Positive = input$var) %>%",
        "+ ",
        "  rename(yval = input$ycol)",
        "+ ",
        "",
        "+ ",
        "df_2$Positive[df_2$Positive== 1 ]<-\"YES\"",
        "+ ",
        "df_2$Positive[df_2$Positive== 0 ]<-\"NO\"",
        "+ ",
        "",
        "+ ",
        "",
        "+ ",
        "df_2 %>% ",
        "+ ",
        "  ggplot(aes(x=ThyroidClass, y=yval)) +",
        "+ ",
        "  geom_boxplot(aes(colour=Positive))+ ",
        "+ ",
        "  labs(",
        "+ ",
        "    x = \"Illness\",",
        "+ ",
        "    y = \"Y Variable\")",
        "+ ",
        "})",
        "<shiny.render.function> \n",
        "> ",
        "renderPlot({",
        "+ ",
        "  data2 <- data2 %>% ",
        "+ ",
        "    filter(p_n == input$variable, indicateur == input$var) %>% ",
        "+ ",
        "    select(-c(p_n, indicateur))",
        "+ ",
        "",
        "+ ",
        "AddRow=c(NA, ",
        "+ ",
        "         nrow(data2)+1, ",
        "+ ",
        "         data2[1,(ncol(data2)-1):ncol(data2)])",
        "+ ",
        "data2 <- rbind(data2, as.numeric(AddRow))",
        "+ ",
        "",
        "+ ",
        "",
        "+ ",
        "data2 <- data2 %>% ",
        "+ ",
        "  mutate(id = c(1:6))",
        "+ ",
        "data2  %>%",
        "+ ",
        "  ggplot(aes(x=id)) +",
        "+ ",
        "  geom_polygon(aes(y=standard),color = \"black\", fill= \"#ffd200\",alpha=0.1)+",
        "+ ",
        "  geom_point(aes(y=standard, fill= \"#ffd200\"),size=5,shape=21,color = 'black',fill= \"#ffd200\")+",
        "+ ",
        "  ",
        "+ ",
        "  geom_polygon(aes(y=mean),color = \"black\", fill= \"#304156\",alpha=0.1)+",
        "+ ",
        "  geom_point(aes(y=mean, fill= \"#304156\"),size=5,shape=21,color = 'black', fill= \"#304156\")+",
        "+ ",
        "  ",
        "+ ",
        "  geom_polygon(aes(y=median),color = \"black\", fill= \"#f8766d\",alpha=0.1)+",
        "+ ",
        "  geom_point(aes(y=median, fill= \"#f8766d\"),size=5,shape=21,color = 'black', fill= \"#f8766d\")+",
        "+ ",
        "  ",
        "+ ",
        "  coord_polar() +",
        "+ ",
        "  scale_x_continuous(breaks =data2$id,labels=data2$name)+",
        "+ ",
        "  theme_light()+",
        "+ ",
        "  theme(axis.text.x=element_text(size = 15,colour=\"black\"))+",
        "+ ",
        "    labs(",
        "+ ",
        "     x = \" \", y = \"Hormone values\",",
        "+ ",
        "    subtitle =  \"Tips: Red: Mediam, Yellow: Standard, Gray: Mean\" ,",
        "+ ",
        "    caption = \"T3: The reading result of the Free triiodothyronine | T4: The reading result of the Free thyroxine, \\nTSH: The result of the TSH blood test | FTI:The result of the Free Thyroxine Index. \\nT4U: The result of the thyroxine utilisation rate\" )",
        "+ ",
        "})",
        "<shiny.render.function> \n\nRestarting R session...\n\n",
        "Error in if (file.exists(pythonPath)) return(pythonPath) : \n  argument is of length zero\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(readr)",
        "> ",
        "",
        "> ",
        "library(ggplot2)",
        "> ",
        "data1 <- read.csv(\"../A_Datas/thyroid_tidy.csv\",encoding = 'UTF-8')",
        "> ",
        "head(data1)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "data_age_pre <- data1 %>% ",
        "+ ",
        "  group_by(patient_age_Seg, presc_thyroxine) %>% ",
        "+ ",
        "  summarise(count = n(),",
        "+ ",
        "            .groups = \"drop_last\")",
        "> ",
        "data_age_pre$presc_thyroxine[data_age_pre$presc_thyroxine== 0 ]<-\"NO\"",
        "> ",
        "data_age_pre$presc_thyroxine[data_age_pre$presc_thyroxine== 1 ]<-\"YES\"",
        "> ",
        "ggplot(data=data_age_pre,",
        "+ ",
        "       mapping=aes(x=patient_age_Seg,y=count))+",
        "+ ",
        "  geom_point(aes(size=count, colour=presc_thyroxine),alpha=1/3 )",
        "> ",
        "df_1 <- data1 %>% ",
        "+ ",
        "  group_by(patient_age_Seg, presc_thyroxine) %>% ",
        "+ ",
        "  summarise(count = n(),",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"presc_thyroxine\") %>% ",
        "+ ",
        "  rename(p_n = presc_thyroxine)",
        "> ",
        "",
        "> ",
        "df_1$p_n[df_1$p_n== 0 ]<-\"NO\"",
        "> ",
        "df_1$p_n[df_1$p_n== 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_1 %>% ",
        "+ ",
        "  ggplot(aes(x = patient_age_Seg, y = count)) +",
        "+ ",
        "  geom_col(aes(colour=p_n, fill=p_n), position = \"dodge\") +",
        "+ ",
        "  facet_grid(~ indicateur)",
        "> ",
        "df_2 <- data1 %>% ",
        "+ ",
        "  group_by(patient_age_Seg, tumor) %>% ",
        "+ ",
        "  summarise(count = n(),",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"tumor\") %>% ",
        "+ ",
        "  rename(p_n = tumor)",
        "> ",
        "",
        "> ",
        "df_2$p_n[df_2$p_n== 0 ]<-\"NO\"",
        "> ",
        "df_2$p_n[df_2$p_n== 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df <- rbind(df_1, df_2)",
        "> ",
        "df %>% ",
        "+ ",
        "  ggplot(aes(x = patient_age_Seg, y = count)) +",
        "+ ",
        "  geom_col(aes(colour=p_n, fill=p_n), position = \"dodge\") +",
        "+ ",
        "  facet_grid(~ indicateur)",
        "> ",
        "df_2 <- data1 %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_gender, tumor) %>% ",
        "+ ",
        "  summarise(count = n(),",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  rename(p_n = 'tumor') %>% ",
        "+ ",
        "  rename(indic = 'patient_gender')",
        "> ",
        "",
        "> ",
        "df_2$indic[df_2$indic== 0 ]<-\"NO\"",
        "> ",
        "df_2$indic[df_2$indic== 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_2$p_n[df_2$p_n== 0 ]<-\"NO\"",
        "> ",
        "df_2$p_n[df_2$p_n== 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_2 %>% ",
        "+ ",
        "  ggplot(aes(x = ThyroidClass, y = count)) +",
        "+ ",
        "  geom_col(aes(colour=ThyroidClass, fill=ThyroidClass), position = \"dodge\")+",
        "+ ",
        "  facet_grid( ~ indic)",
        "> ",
        "df_2 <- data1 %>% ",
        "+ ",
        "  rename(p_n = 'pregnant') %>% ",
        "+ ",
        "  rename(xval = T3_reading_fill) %>% ",
        "+ ",
        "  rename(yval = T4U_rate_reading_fill) %>% ",
        "+ ",
        "  ",
        "+ ",
        "  mutate(xval = log(xval)) %>% ",
        "+ ",
        "  mutate(yval = log(yval))",
        "> ",
        "",
        "> ",
        "df_2$p_n[df_2$p_n== 0 ]<-\"NO\"",
        "> ",
        "df_2$p_n[df_2$p_n== 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_2 %>% ",
        "+ ",
        "  ggplot(aes(x = xval, y = yval)) +",
        "+ ",
        "  geom_point(aes(colour=p_n))+",
        "+ ",
        "  facet_grid(p_n ~ ThyroidClass)",
        "> ",
        "df_2 <- data1 %>% ",
        "+ ",
        "  rename(p_n = 'pregnant') ",
        "> ",
        "",
        "> ",
        "df_2$p_n[df_2$p_n== 0 ]<-\"NO\"",
        "> ",
        "df_2$p_n[df_2$p_n== 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_2 %>% ",
        "+ ",
        "  ggplot(aes(x=ThyroidClass, y=T3_reading_fill)) +",
        "+ ",
        "  geom_boxplot(aes(colour=p_n))",
        "> ",
        "",
        "> ",
        "df_2 <- data1 %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_gender, tumor) %>% #select",
        "+ ",
        "  summarise(count = n(),",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  rename(p_n = 'tumor') %>% ",
        "+ ",
        "  rename(indic = 'patient_gender')",
        "> ",
        "",
        "> ",
        "df_2$indic[df_2$indic== 0 ]<-\"NO\"",
        "> ",
        "df_2$indic[df_2$indic== 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_2$p_n[df_2$p_n== 0 ]<-\"NO\"",
        "> ",
        "df_2$p_n[df_2$p_n== 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_2 %>% ",
        "+ ",
        "  ggplot(aes(x = indic, y = count)) +",
        "+ ",
        "  geom_col(aes(colour=indic, fill=indic), position = \"dodge\")+",
        "+ ",
        "  facet_grid(p_n ~ ThyroidClass)",
        "> ",
        "bin_var <- c(\"patient_gender\", \"presc_thyroxine\", \"queried_why_on_thyroxine\", \"presc_anthyroid_meds\", \"sick\", \"pregnant\", \"thyroid_surgery\", \"radioactive_iodine_therapyI131\", \"query_hypothyroid\", \"query_hyperthyroid\", \"lithium\", \"goitre\", \"tumor\", \"hypopituitarism\", ",
        "+ ",
        "\"psych_condition\", \"TSH_measured\", \"T3_measured\", \"T4_measured\", \"thyrox_util_rate_T4U_measured\", \"FTI_measured\")",
        "> ",
        "data1 %>% ",
        "+ ",
        "  group_by(patient_gender, presc_thyroxine, queried_why_on_thyroxine, presc_anthyroid_meds, sick, pregnant, thyroid_surgery, radioactive_iodine_therapyI131, query_hypothyroid, query_hyperthyroid, lithium, goitre, tumor, hypopituitarism, ",
        "+ ",
        "psych_condition, TSH_measured, T3_measured, T4_measured, thyrox_util_rate_T4U_measured, FTI_measured) %>% ",
        "+ ",
        "  summarise(count = n(),",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  head()",
        "> ",
        "df_sum",
        "Error: object 'df_sum' not found\n",
        "> ",
        "df_sum",
        "Error: object 'df_sum' not found\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(skimr)",
        "> ",
        "library(readr)",
        "> ",
        "df_sum <- rbind(df_1, df_2, df_3, df_4, df_5,",
        "+ ",
        "                df_6, df_7, df_8, df_9, df_10,",
        "+ ",
        "           df_11, df_12, df_13, df_14, df_15,",
        "+ ",
        "           df_16, df_17, df_18, df_19, df_20)",
        "Error in list2(...) : object 'df_3' not found\n",
        "\nRestarting R session...\n\n",
        "Error in if (file.exists(pythonPath)) return(pythonPath) : \n  argument is of length zero\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(skimr)",
        "> ",
        "library(readr)",
        "> ",
        "data1 <- read.csv(\"../A_Datas/thyroid_tidy.csv\",encoding = 'UTF-8')",
        "> ",
        "head(data1)",
        "> ",
        "data_sick <- data1 %>%  ",
        "+ ",
        "  select(-X)",
        "> ",
        "df_1 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, patient_gender) %>% ",
        "+ ",
        "  summarise(count = n(),",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"patient_gender\") %>% ",
        "+ ",
        "  rename(positive = patient_gender)",
        "> ",
        "df_2 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, presc_thyroxine) %>% ",
        "+ ",
        "  summarise(count = n(),",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"presc_thyroxine\") %>% ",
        "+ ",
        "  rename(positive = presc_thyroxine)",
        "> ",
        "df_3 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, queried_why_on_thyroxine) %>% ",
        "+ ",
        "  summarise(count = n(),",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"queried_why_on_thyroxine\") %>% ",
        "+ ",
        "  rename(positive = queried_why_on_thyroxine)",
        "> ",
        "df_4 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, presc_anthyroid_meds) %>% ",
        "+ ",
        "  summarise(count = n(),",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"presc_anthyroid_meds\") %>% ",
        "+ ",
        "  rename(positive = presc_anthyroid_meds)",
        "> ",
        "df_5 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, sick) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"sick\") %>% #2",
        "+ ",
        "  rename(positive = sick) #3",
        "> ",
        "df_6 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, pregnant) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"pregnant\") %>% #2",
        "+ ",
        "  rename(positive = pregnant) #3",
        "> ",
        "df_7 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, thyroid_surgery) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"thyroid_surgery\") %>% #2",
        "+ ",
        "  rename(positive = thyroid_surgery) #3",
        "> ",
        "df_8 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, radioactive_iodine_therapyI131) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"radioactive_iodine_therapyI131\") %>% #2",
        "+ ",
        "  rename(positive = radioactive_iodine_therapyI131) #3",
        "> ",
        "df_9 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, query_hypothyroid) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"query_hypothyroid\") %>% #2",
        "+ ",
        "  rename(positive = query_hypothyroid) #3",
        "> ",
        "df_10 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, query_hyperthyroid) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"query_hyperthyroid\") %>% #2",
        "+ ",
        "  rename(positive = query_hyperthyroid) #3",
        "> ",
        "df_11 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, lithium) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"lithium\") %>% #2",
        "+ ",
        "  rename(positive = lithium) #3",
        "> ",
        "df_12 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, goitre) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"goitre\") %>% #2",
        "+ ",
        "  rename(positive = goitre) #3",
        "> ",
        "df_13 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, tumor) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"tumor\") %>% #2",
        "+ ",
        "  rename(positive = tumor) #3",
        "> ",
        "df_14 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, hypopituitarism) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"hypopituitarism\") %>% #2",
        "+ ",
        "  rename(positive = hypopituitarism) #3",
        "> ",
        "df_15 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, psych_condition) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"psych_condition\") %>% #2",
        "+ ",
        "  rename(positive = psych_condition) #3",
        "> ",
        "df_16 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, TSH_measured) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"TSH_measured\") %>% #2",
        "+ ",
        "  rename(positive = TSH_measured) #3",
        "> ",
        "df_17 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, T3_measured) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"T3_measured\") %>% #2",
        "+ ",
        "  rename(positive = T3_measured) #3",
        "> ",
        "df_18 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, T4_measured) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"T4_measured\") %>% #2",
        "+ ",
        "  rename(positive = T4_measured) #3",
        "> ",
        "df_19 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, thyrox_util_rate_T4U_measured) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"thyrox_util_rate_T4U_measured\") %>% #2",
        "+ ",
        "  rename(positive = thyrox_util_rate_T4U_measured) #3",
        "> ",
        "df_20 <- data_sick %>% ",
        "+ ",
        "  group_by(ThyroidClass, patient_age_Seg, FTI_measured) %>% #1",
        "+ ",
        "  summarise(count = n(), ",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"FTI_measured\") %>% #2",
        "+ ",
        "  rename(positive = FTI_measured) #3",
        "> ",
        "df_sum <- rbind(df_1, df_2, df_3, df_4, df_5,",
        "+ ",
        "                df_6, df_7, df_8, df_9, df_10,",
        "+ ",
        "           df_11, df_12, df_13, df_14, df_15,",
        "+ ",
        "           df_16, df_17, df_18, df_19, df_20)",
        "> ",
        "df_sum %>% write.csv(file = \"../A_Datas/df_tidy_for_db2.csv\", row.names=F)",
        "> ",
        "df_1 <- data1 %>% ",
        "+ ",
        "  group_by(patient_age_Seg, presc_thyroxine) %>% ",
        "+ ",
        "  summarise(count = n(),",
        "+ ",
        "            .groups = \"drop_last\") %>% ",
        "+ ",
        "  mutate(indicateur = \"presc_thyroxine\") %>% ",
        "+ ",
        "  rename(p_n = presc_thyroxine)",
        "> ",
        "",
        "> ",
        "df_1$p_n[df_1$p_n== 0 ]<-\"NO\"",
        "> ",
        "df_1$p_n[df_1$p_n== 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_1 %>% ",
        "+ ",
        "  ggplot(aes(x = patient_age_Seg, y = count)) +",
        "+ ",
        "  geom_col(aes(colour=p_n, fill=p_n), position = \"dodge\") +",
        "+ ",
        "  facet_grid(~ indicateur)",
        "> ",
        "df_2 <- df_sum %>% ",
        "+ ",
        "  filter((indicateur == \"patient_gender\") | (indicateur == \"tumor\"))",
        "> ",
        "",
        "> ",
        "df_2$positive[df_2$positive == 0 ]<-\"NO\"",
        "> ",
        "df_2$positive[df_2$positive == 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_2 %>% ",
        "+ ",
        "  ggplot(aes(x = ThyroidClass, y = count)) +",
        "+ ",
        "  geom_col(aes(colour=indicateur, fill=indicateur), position = \"dodge\")+",
        "+ ",
        "  facet_grid(positive ~ ThyroidClass)",
        "> ",
        "df_sum",
        "\u001B[38;5;246m# A tibble: 592 × 5\u001B[39m\n\u001B[38;5;246m# Groups:   ThyroidClass, patient_age_Seg [19]\u001B[39m\n   ThyroidClass patient_age_Seg positive count indicateur    \n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m              \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m         \n\u001B[38;5;250m 1\u001B[39m negative     1-10                   0    18 patient_gender\n\u001B[38;5;250m 2\u001B[39m negative     1-10                   1    12 patient_gender\n\u001B[38;5;250m 3\u001B[39m negative     11-20                  0    72 patient_gender\n",
        "\u001B[38;5;250m 4\u001B[39m negative     11-20                  1   164 patient_gender\n\u001B[38;5;250m 5\u001B[39m negative     21-30                  0   127 patient_gender\n\u001B[38;5;250m 6\u001B[39m negative     21-30                  1   338 patient_gender\n\u001B[38;5;250m 7\u001B[39m negative     31-40                  0   173 patient_gender\n\u001B[38;5;250m 8\u001B[39m negative     31-40                  1   361 patient_gender\n\u001B[38;5;250m 9\u001B[39m negative     41-50                  0   188 patient_gender\n\u001B[38;5;250m10\u001B[39m negative     41-50                  1   275 patient_gender\n",
        "\u001B[38;5;246m# … with 582 more rows\u001B[39m\n\u001B[38;5;246m# ℹ Use `print(n = ...)` to see more rows\u001B[39m\n",
        "> ",
        "df_2 <- df_sum %>% ",
        "+ ",
        "  filter((indicateur == \"patient_gender\"))",
        "> ",
        "",
        "> ",
        "df_2$positive[df_2$positive == 0 ]<-\"NO\"",
        "> ",
        "df_2$positive[df_2$positive == 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_1 %>% ",
        "+ ",
        "  ggplot(aes(x = patient_age_Seg, y = count)) +",
        "+ ",
        "  geom_col(aes(colour=p_n, fill=p_n), position = \"dodge\") +",
        "+ ",
        "  facet_grid(~ indicateur)",
        "> ",
        "df_2 <- df_sum %>% ",
        "+ ",
        "  filter((indicateur == \"patient_gender\"))",
        "> ",
        "",
        "> ",
        "df_2$positive[df_2$positive == 0 ]<-\"NO\"",
        "> ",
        "df_2$positive[df_2$positive == 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_2 %>% ",
        "+ ",
        "  ggplot(aes(x = patient_age_Seg, y = count)) +",
        "+ ",
        "  geom_col(aes(colour=p_n, fill=p_n), position = \"dodge\") +",
        "+ ",
        "  facet_grid(~ indicateur)",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_col()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error in `FUN()`:\u001B[22m\n\u001B[33m!\u001B[39m object 'p_n' not found\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mbase\u001B[22m (local) `<fn>`(x)\n\u001B[90m  2. \u001B[39mggplot2:::print.ggplot(x)\n\u001B[90m  4. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m  5. \u001B[39mggplot2:::by_layer(...)\n\u001B[90m 12. \u001B[39mggplot2 (local) f(l = layers[[i]], d = data[[i]])\n\u001B[90m 13. \u001B[39ml$compute_aesthetics(d, plot)\n\u001B[90m 14. \u001B[39mggplot2 (local) compute_aesthetics(..., self = self)\n\u001B[90m 15. \u001B[39mggplot2:::scales_add_defaults(...)\n\u001B[90m 16. \u001B[39m\u001B[1mbase\u001B[22m::lapply(aesthetics[new_aesthetics], eval_tidy, data = data)\n\u001B[90m 17. \u001B[39m\u001B[1mrlang\u001B[22m (local) FUN(X[[i]], ...)\n",
        "> ",
        "df_2 <- df_sum %>% ",
        "+ ",
        "  filter((indicateur == \"patient_gender\"))",
        "> ",
        "",
        "> ",
        "df_2$positive[df_2$positive == 0 ]<-\"NO\"",
        "> ",
        "df_2$positive[df_2$positive == 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_2 %>% ",
        "+ ",
        "  ggplot(aes(x = patient_age_Seg, y = count)) +",
        "+ ",
        "  geom_col(aes(colour=positive, fill=positive), position = \"dodge\") +",
        "+ ",
        "  facet_grid(~ indicateur)",
        "> ",
        "df_2 <- df_sum %>% ",
        "+ ",
        "  filter((indicateur == \"patient_gender\"))",
        "> ",
        "",
        "> ",
        "df_2$positive[df_2$positive == 0 ]<-\"NO\"",
        "> ",
        "df_2$positive[df_2$positive == 1 ]<-\"YES\"",
        "> ",
        "",
        "> ",
        "df_2 %>% ",
        "+ ",
        "  ggplot(aes(x = patient_age_Seg, y = count)) +",
        "+ ",
        "  geom_col(aes(colour=positive, fill=positive), position = \"dodge\")",
        "> ",
        "renderPlot({",
        "+ ",
        "df_2 <- data3 %>% ",
        "+ ",
        "  filter(indicateur == input$var)",
        "+ ",
        "",
        "+ ",
        "df_2$positive[df_2$positive == 0 ]<-\"NO\"",
        "+ ",
        "df_2$positive[df_2$positive == 1 ]<-\"YES\"",
        "+ ",
        "",
        "+ ",
        "df_2 %>% ",
        "+ ",
        "  ggplot(aes(x = patient_age_Seg, y = count)) +",
        "+ ",
        "  geom_col(aes(colour=positive, fill=positive), position = \"dodge\")",
        "+ ",
        "})",
        "Error in renderPlot({ : could not find function \"renderPlot\"\n",
        "\nRestarting R session...\n\n"
    ]
}